{"version":3,"sources":["components/List/index.js","index.js"],"names":["List","arr","updateItem","statusActive","map","item","index","status","className","icon","faPenSquare","faMinus","onClick","title","text","faHands","faArrowCircleLeft","App","inputRef","useRef","ulStatusRef","useState","subData","setSubData","setStatusActive","setArr","useEffect","current","value","type","ref","id","updateArr","el","ReactDOM","render","document","getElementById"],"mappings":"uNA8BeA,EAzBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aAApB,OACX,oCACGF,QADH,IACGA,OADH,EACGA,EAAKG,KAAI,SAACC,EAAMC,GAAP,OAAiBD,EAAKE,SAAWJ,EACzC,qBAEEK,UAAU,OAFZ,UAIE,cAAC,IAAD,CACEC,KAAsB,IAAhBJ,EAAKE,OAAeG,IAAcC,IACxCC,QAAS,kBAAsB,IAAhBP,EAAKE,OAAeL,EAAWI,EAAO,GAAK,MAC1DO,MAAuB,IAAhBR,EAAKE,OAAe,2EAAiB,OAG9C,+BAAOF,EAAKS,OAEZ,cAAC,IAAD,CACEL,KAAsB,IAAhBJ,EAAKE,OAAeI,IAA0B,IAAhBN,EAAKE,OAAeQ,IAAUC,IAClEJ,QAAS,kBAAsB,IAAhBP,EAAKE,OAAeL,EAAWI,EAAO,GAAKJ,EAAWI,EAAO,IAC5EO,MAAuB,IAAhBR,EAAKE,OAAe,yDAA8B,IAAhBF,EAAKE,OAAe,6CAAY,SAdtED,GAiBL,WCrBFW,G,MAAM,WACV,IAAMC,EAAWC,iBAAO,MAClBC,EAAcD,iBAAO,MAFX,EAGcE,mBAAS,MAHvB,mBAGTC,EAHS,KAGAC,EAHA,OAIwBF,mBAAS,GAJjC,mBAITlB,EAJS,KAIKqB,EAJL,OAKQH,mBAAS,IALjB,mBAKRpB,EALQ,KAKHwB,EALG,KAOhBC,qBAAU,WACHJ,IAELG,EAAO,GAAD,mBACDxB,GADC,CAEJ,CACEM,OAAQ,EACRO,KAAMQ,MAGVC,EAAW,MACXL,EAASS,QAAQC,MAAQ,MACxB,CAAEN,IAUL,OACE,qCACE,sDACA,sBAAKd,UAAU,QAAf,UACE,uBAAOqB,KAAK,OAAOC,IAAKZ,IACxB,wBAAQN,QAAS,kBAAMW,EAAWL,EAASS,QAAQC,QAAnD,iEAEF,sBAAKpB,UAAU,OAAf,UACE,qBAAIA,UAAU,eAAesB,IAAKV,EAAlC,UACE,oBAAIZ,UAA4B,IAAjBL,EAAqB,gBAAkB,KAAMS,QAAS,kBAAMY,EAAgB,IAA3F,wDACA,oBAAIhB,UAA4B,IAAjBL,EAAqB,gBAAkB,KAAMS,QAAS,kBAAMY,EAAgB,IAA3F,oEACA,oBAAIhB,UAA4B,IAAjBL,EAAqB,gBAAkB,KAAMS,QAAS,kBAAMY,EAAgB,IAA3F,2DAEF,cAAC,EAAD,CACEvB,IAAKA,EACLC,WAvBW,SAAC6B,EAAIxB,GACtB,IAAMyB,EAAY/B,EAAIG,KAAI,SAAC6B,EAAI3B,GAE7B,OADIA,IAAUyB,IAAIE,EAAG1B,OAASA,GACvB0B,KAETR,EAAO,YAAKO,KAmBN7B,aAAcA,YAOxB+B,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d41d634b.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft, faHands, faPenSquare, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\n\nconst List = ({ arr, updateItem, statusActive }) => (\n  <ul>\n    {arr?.map((item, index) => item.status === statusActive ? (\n      <li\n        key={index}\n        className=\"list\"\n      >\n        <FontAwesomeIcon\n          icon={item.status === 2 ? faPenSquare : faMinus}\n          onClick={() => item.status === 2 ? updateItem(index, 0) : null}\n          title={item.status === 2 ? 'Восстановить' : null}\n        />\n\n        <span>{item.text}</span>\n\n        <FontAwesomeIcon\n          icon={item.status === 2 ? faMinus : item.status === 0 ? faHands : faArrowCircleLeft}\n          onClick={() => item.status === 0 ? updateItem(index, 1) : updateItem(index, 2)}\n          title={item.status === 0 ? 'Завершить' : item.status === 1 ? 'Удалить' : null}\n        />\n      </li>\n    ) : null)}\n  </ul>\n);\n\nexport default List;","import { StrictMode, useEffect, useState, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport List from './components/List';\nimport './index.css';\n\nconst App = () => {\n  const inputRef = useRef(null);\n  const ulStatusRef = useRef(null);\n  const [subData, setSubData] = useState(null);\n  const [statusActive, setStatusActive] = useState(0);\n  const [ arr, setArr ] = useState([]);\n\n  useEffect(() => {\n    if (!subData) return;\n\n    setArr([\n      ...arr,\n      {\n        status: 0,\n        text: subData\n      }\n    ]);\n    setSubData(null);\n    inputRef.current.value = '';\n  }, [ subData ]);\n\n  const updateItem = (id, status) => {\n    const updateArr = arr.map((el, index) => {\n      if (index === id) el.status = status;\n      return el;\n    });\n    setArr([ ...updateArr ]);\n  };\n\n  return (\n    <>\n      <h2>To do list use HOOKS</h2>\n      <div className=\"title\">\n        <input type=\"text\" ref={inputRef}/>\n        <button onClick={() => setSubData(inputRef.current.value)}>Добавить</button>\n      </div>\n      <div className=\"body\">\n        <ul className=\"status-lists\" ref={ulStatusRef}>\n          <li className={statusActive === 0 ? 'status-active' : null} onClick={() => setStatusActive(0)}>Активны</li>\n          <li className={statusActive === 1 ? 'status-active' : null} onClick={() => setStatusActive(1)}>Завершены</li>\n          <li className={statusActive === 2 ? 'status-active' : null} onClick={() => setStatusActive(2)}>Удалены</li>\n        </ul>\n        <List\n          arr={arr}\n          updateItem={updateItem}\n          statusActive={statusActive}\n        />\n      </div>\n    </>\n  );\n};\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}